☞자료구조
-구조화된 자료의 저장 형식. 사용할 수 있는 형식이 정해진 것.
->List, Tuple, Dict, Set 등이 있음.

☞자료형
-숫자(number(int, float 등)), 문자(string), 논리값(boolen) 등 변수의 형태.
-type(변수 이름)을 사용하여 변수의 자료형/자료구조를 알 수 있다.
-isinstance(변수 이름, 자료형)를 이용하여 주어진 값이 특정 자료형이 맞는지 확인할 수 있음. 변수의 자료형과 내가 입력한 자료형이 일치하면 True, 아니면 False.
->복소수인 변수 a의 자료형이 복소수형이 맞는지를 확인하는 과정. 변수에 대입한 값인 (1+2j)를 입력하고 뒤에 알맞은 자료형인 complex를 입력하니 True값이 출력됐다.

☞List
-아이템([] 안에 쉼표로 나뉘어져 있는 값들)의 순서가 지정된 목록.
-아이템의 자료형/자료구조가 달라도 괜찮음.
-아이템의 인덱스는 0부터 시작함. (인덱스를 이용해서 출력하는거면 print 필요X)
->a=[1, 2, 3, 4]인 경우 a[1] = 2.

-아이템을 뒤에서부터 세고 싶다면 –부호를 이용하면 됨.
->단, 거꾸로 셀 경우엔 0부터 시작하지 않고 바로 –1부터 시작한다.

-구간을 골라서 아이템을 선택할 수도 있는데, a[0:3]인 경우 실제로 선택되는 아이템은 3보다 하나 작은 인덱스를 갖는 0~2까지의 아이템을 의미한다.
->a[0:3] = 1, 2, 3	a[1:3] = 2, 3

-특정 아이템부터 끝까지 선택하고 싶다면 a[1: ]처럼 뒤를 공백으로 두면 된다.
(a[ :2]이면 처음부터 인덱스값 1을 갖는 아이템까지. 0, 1을 출력하겠지..)
->뒤에서부터 선택하는 것도 가능. a[-2: ] = 3, 4	a[ :-2] = 1, 2

★헷갈린다면 그냥 [시작:끝]에서 시작에 들어가는 인덱스는 그대로, 끝에 들어가는 인덱스는 본인을 제외하고! (하나를 빼는 것임!!) 값을 의미한다고 생각.
-아이템을 변경하는 것도 가능하다.
->a[0] = 50

☞Tuple
-List와 기능은 동일하지만 [] 대신 ()을 이용하며, 선언 이후에 아이템을 변경하는 것은 불가능함.
-일반적으로는 List보다 속도가 빠름.
-List와 동일하게 인덱스가 0으로 시작된다.

☞String
-정수를 바꾸듯이 문자열 바꾸기는 불가능.
-enumerate 함수를 이용하여 List 함수와 함께 인덱스를 짝지어 줄 수 있음. 쌍으로!
-len(변수 이름)을 사용하여 변수에 대입된 문자열의 길이를 알 수 있음.
